webpackHotUpdate(1,{

/***/ 399:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _desc, _value, _class, _descriptor;\n//import appUrl from \"../config/appUrl\";\n\n\nvar _mobx = __webpack_require__(24);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _axios = __webpack_require__(115);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _Root = __webpack_require__(43);\n\nvar _urlSearchParams = __webpack_require__(400);\n\nvar _urlSearchParams2 = _interopRequireDefault(_urlSearchParams);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _initDefineProp(target, property, descriptor, context) {\n    if (!descriptor) return;\n    Object.defineProperty(target, property, {\n        enumerable: descriptor.enumerable,\n        configurable: descriptor.configurable,\n        writable: descriptor.writable,\n        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n    });\n}\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n    var desc = {};\n    Object['ke' + 'ys'](descriptor).forEach(function (key) {\n        desc[key] = descriptor[key];\n    });\n    desc.enumerable = !!desc.enumerable;\n    desc.configurable = !!desc.configurable;\n\n    if ('value' in desc || desc.initializer) {\n        desc.writable = true;\n    }\n\n    desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n        return decorator(target, property, desc) || desc;\n    }, desc);\n\n    if (context && desc.initializer !== void 0) {\n        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n        desc.initializer = undefined;\n    }\n\n    if (desc.initializer === void 0) {\n        Object['define' + 'Property'](target, property, desc);\n        desc = null;\n    }\n\n    return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar cookies = __webpack_require__(401);\n\n//let appUrl = \"https://everyone-can-vote.herokuapp.com\"\nvar appUrl = \"https://fcc-vote-simonbryatov.c9users.io/\";\nvar ApiStore = (_dec = _mobx.action.bound, _dec2 = _mobx.action.bound, _dec3 = _mobx.action.bound, _dec4 = _mobx.action.bound, _dec5 = _mobx.action.bound, _dec6 = _mobx.action.bound, _dec7 = _mobx.action.bound, (_class = function () {\n    function ApiStore() {\n        var _this = this;\n\n        _classCallCheck(this, ApiStore);\n\n        _initDefineProp(this, 'userPolls', _descriptor, this);\n\n        this.currentPoll_Id = null;\n        this.isLoggedIn = (0, _mobx.observable)(false);\n        this.fetching = (0, _mobx.observable)(false);\n        this.userToken = (0, _mobx.observable)(null);\n        this.userName = (0, _mobx.observable)(null);\n        this.voted = (0, _mobx.observable)(false);\n        this.lastVote = (0, _mobx.observable)(null);\n        this.newOption = (0, _mobx.observable)(\"\");\n        this.pollName = (0, _mobx.observable)(\"\");\n        this.pollOptions = (0, _mobx.observable)(\"\");\n\n        this.fetchPollsList = function () {\n            return _this.__fetchPollsList__REACT_HOT_LOADER__.apply(_this, arguments);\n        };\n\n        this.fetchPollsList();\n        this.prepareToken();\n        if (this.userToken.get()) {\n            console.log(\"logged in\");\n            this.isLoggedIn.set(true);\n            this.userName.set(cookies.get(\"userName\"));\n        }\n        console.log(\"Api store is ready\");\n    }\n\n    _createClass(ApiStore, [{\n        key: 'renderOnLoginStatus',\n        value: function renderOnLoginStatus(guestOpt, userOpt) {\n            return this.isLoggedIn.get() ? userOpt : guestOpt;\n        }\n    }, {\n        key: 'logOut',\n        value: function logOut() {\n            console.log(\"Logging out\");\n            this.userToken.set(null);\n            this.userName.set(null);\n            this.isLoggedIn.set(false);\n            cookies.remove('userToken');\n            cookies.remove('userName');\n        }\n    }, {\n        key: 'getUserPolls',\n        value: function getUserPolls() {\n            var _this2 = this;\n\n            this.fetching.set(true);\n            _axios2.default.get(appUrl + '/api/userPolls').then(function (res) {\n                {\n                    console.log(res.data);\n                    _this2.userPolls = res.data;\n                    _this2.fetching.set(false);\n                }\n            }).catch(function (err) {\n                console.log(err.response.data);\n            });\n        }\n    }, {\n        key: 'prepareToken',\n        value: function prepareToken() {\n            var urlParams = new _urlSearchParams2.default(window.location.search);\n            var token = urlParams.get(\"token\");\n            console.log(token, \"curr params\");\n            if (token) {\n                console.log(\"Got the token \" + token);\n                cookies.set('userToken', token, { secure: true, expires: 14 });\n                cookies.set('userName', urlParams.get(\"userName\"));\n            }\n\n            token = cookies.get(\"userToken\");\n            console.log(\"checked the cookies\", token);\n            if (token) {\n                this.userToken.set(token);\n                this.userName.set(cookies.get(\"userName\"));\n                console.log(\"curr token\", this.userToken.get());\n            }\n        }\n    }, {\n        key: '__fetchPollsList__REACT_HOT_LOADER__',\n        value: function __fetchPollsList__REACT_HOT_LOADER__() {\n            return this.__fetchPollsList__REACT_HOT_LOADER__.apply(this, arguments);\n        }\n    }, {\n        key: '__fetchPollsList__REACT_HOT_LOADER__',\n        value: function __fetchPollsList__REACT_HOT_LOADER__() {\n            return this.__fetchPollsList__REACT_HOT_LOADER__.apply(this, arguments);\n        }\n    }, {\n        key: '__fetchPollsList__REACT_HOT_LOADER__',\n        value: function __fetchPollsList__REACT_HOT_LOADER__() {\n            return this.__fetchPollsList__REACT_HOT_LOADER__.apply(this, arguments);\n        }\n    }, {\n        key: '__fetchPollsList__REACT_HOT_LOADER__',\n        value: function __fetchPollsList__REACT_HOT_LOADER__(lastVote) {\n            var _this3 = this;\n\n            this.fetching.set(true);\n            _axios2.default.get(appUrl + \"/api/pollsList\").then(function (res) {\n                console.log(\"I've got the power of Polls... Again!\", res.data);\n                _Root.ViewStore.setProperty(\"pollsList\", res.data);\n                _this3.fetching.set(false);\n                if (lastVote >= 0) {\n                    _this3.lastVote.set(lastVote);\n                }\n                if (_this3.currentPoll_Id) {\n                    _Root.ViewStore.setPollView(_this3.currentPoll_Id);\n                }\n            });\n        }\n    }, {\n        key: 'createNewPoll',\n        value: function createNewPoll() {\n            var _this4 = this;\n\n            console.log(\"New Poll is \" + this.pollName + \" \" + this.pollOptions + \"!\");\n            var opts = this.pollOptions.get().split('\\n');\n            var newPoll = { name: this.pollName.get(), options: opts };\n            console.log(JSON.stringify(newPoll));\n            _axios2.default.post(appUrl + ('/api/createNewPoll?data=' + JSON.stringify(newPoll)), { firstName: 123 }).then(function (res) {\n                {\n                    console.log(res.data);\n                    _this4.pollName.set(\"\");\n                    _this4.pollOptions.set(\"\");\n                    _this4.fetchPollsList();\n                }\n            }).catch(function (err) {\n                alert(err.response.data);\n            });\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            console.log(\"reset\");\n            this.newOption.set(\"\");\n            this.pollName.set(\"\");\n            this.pollOptions.set(\"\");\n            this.userPolls = null;\n            _Root.ViewStore.chosenOptionIndex.set(null);\n        }\n    }, {\n        key: 'deletePoll',\n        value: function deletePoll(id) {\n            var _this5 = this;\n\n            console.log(\"Deleting poll \" + id);\n            var pollsList = _Root.ViewStore.getProperty(\"pollsList\");\n            var poll = pollsList.find(function (poll) {\n                if (poll[\"_id\"] == id) return true;\n            });\n            if (confirm('Do you really want to delete poll \"' + poll.name + '\"?' + '\\nThis action is permanent.')) {\n                _axios2.default.get(appUrl + '/api/deletePoll', { params: { pollId: id } }).then(function (res) {\n                    console.log(res.data, _this5);\n                    _this5.fetchPollsList();\n                    _this5.getUserPolls();\n                });\n            }\n        }\n    }, {\n        key: 'vote',\n        value: function vote() {\n            var _this6 = this;\n\n            if (this.newOption.get() == \"\") {\n                console.log(_Root.ViewStore.chosenOptionIndex.get(), \"wow\");\n\n                console.log(\"Last voted for \", this.lastVote.get());\n                var vote_id = _Root.ViewStore.currentPoll.options[_Root.ViewStore.chosenOptionIndex][\"_id\"];\n                console.log(vote_id, \"voting\");\n                console.log(\"Voting for\" + this.pollName + \" \" + this.pollOptions + \"!\");\n                _axios2.default.get(appUrl + '/api/vote', { params: { optId: vote_id, pollId: _Root.ViewStore.currentPoll[\"_id\"] } }).then(function (res) {\n                    console.log(\"Last voted for \", _this6.lastVote.get());\n                    _this6.fetchPollsList(_Root.ViewStore.chosenOptionIndex.get());\n                    console.log(res.data, 5555534);\n                }).catch(function (err) {\n                    alert(err.response.data);\n                });\n            } else _axios2.default.get(appUrl + '/api/vote', { params: { optName: this.newOption.get(), pollId: _Root.ViewStore.currentPoll[\"_id\"] } }).then(function (res) {\n                _this6.fetchPollsList(_Root.ViewStore.chosenOptionIndex.get());\n            }).catch(function (err) {\n                alert(err.response.data);\n            });\n        }\n    }]);\n\n    return ApiStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'userPolls', [_mobx.observable], {\n    enumerable: true,\n    initializer: function initializer() {\n        return null;\n    }\n}), _applyDecoratedDescriptor(_class.prototype, 'renderOnLoginStatus', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'renderOnLoginStatus'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'logOut', [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, 'logOut'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getUserPolls', [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, 'getUserPolls'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'prepareToken', [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, 'prepareToken'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'createNewPoll', [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, 'createNewPoll'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'deletePoll', [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, 'deletePoll'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'vote', [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, 'vote'), _class.prototype)), _class));\nvar _default = ApiStore;\nexports.default = _default;\n;\n\nvar _temp = function () {\n    if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n        return;\n    }\n\n    __REACT_HOT_LOADER__.register(appUrl, 'appUrl', '/home/ubuntu/workspace/react-webpack-boilerplate/app/stores/ApiStore.js');\n\n    __REACT_HOT_LOADER__.register(ApiStore, 'ApiStore', '/home/ubuntu/workspace/react-webpack-boilerplate/app/stores/ApiStore.js');\n\n    __REACT_HOT_LOADER__.register(_default, 'default', '/home/ubuntu/workspace/react-webpack-boilerplate/app/stores/ApiStore.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///399\n");

/***/ })

})
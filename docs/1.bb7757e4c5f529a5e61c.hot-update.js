webpackHotUpdate(1,{

/***/ 398:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _dec2, _desc, _value, _class, _descriptor, _descriptor2, _descriptor3;\n\nvar _mobx = __webpack_require__(24);\n\nvar _axios = __webpack_require__(65);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _appUrl = __webpack_require__(141);\n\nvar _appUrl2 = _interopRequireDefault(_appUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _initDefineProp(target, property, descriptor, context) {\n    if (!descriptor) return;\n    Object.defineProperty(target, property, {\n        enumerable: descriptor.enumerable,\n        configurable: descriptor.configurable,\n        writable: descriptor.writable,\n        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n    });\n}\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n    var desc = {};\n    Object['ke' + 'ys'](descriptor).forEach(function (key) {\n        desc[key] = descriptor[key];\n    });\n    desc.enumerable = !!desc.enumerable;\n    desc.configurable = !!desc.configurable;\n\n    if ('value' in desc || desc.initializer) {\n        desc.writable = true;\n    }\n\n    desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n        return decorator(target, property, desc) || desc;\n    }, desc);\n\n    if (context && desc.initializer !== void 0) {\n        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n        desc.initializer = undefined;\n    }\n\n    if (desc.initializer === void 0) {\n        Object['define' + 'Property'](target, property, desc);\n        desc = null;\n    }\n\n    return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar ViewStore = (_dec = _mobx.action.bound, _dec2 = _mobx.action.bound, (_class = function () {\n    function ViewStore() {\n        var _this = this;\n\n        _classCallCheck(this, ViewStore);\n\n        _initDefineProp(this, 'currentPoll', _descriptor, this);\n\n        _initDefineProp(this, 'pollsList', _descriptor2, this);\n\n        this.activeOptionIndex = (0, _mobx.observable)(0);\n        this.dataIsFetching = (0, _mobx.observable)(true);\n        this.isSideMenuOpened = (0, _mobx.observable)(false);\n        this.choosePollMenuOpened = (0, _mobx.observable)(false);\n        this.chosenOptionIndex = (0, _mobx.observable)(null);\n        this.isMobileVersion = (0, _mobx.observable)(false);\n\n        _initDefineProp(this, 'colorMap', _descriptor3, this);\n\n        this.fectchPollsList = function () {\n            return _this.__fectchPollsList__REACT_HOT_LOADER__.apply(_this, arguments);\n        };\n\n        console.log(\"store is ready, really ready, really\");\n        // this.prepareToken(); \n        this.fectchPollsList();\n    }\n\n    _createClass(ViewStore, [{\n        key: 'renderForMobile',\n        value: function renderForMobile(isMobile, component) {\n            if (isMobile == this.isMobileVersion) {\n                return component;\n            }\n        }\n    }, {\n        key: 'getProperty',\n        value: function getProperty(objectName) {\n            return (0, _mobx.toJS)(this[objectName]);\n        }\n    }, {\n        key: 'sectorColor',\n        value: function sectorColor(ind) {\n            var color = this.colorMap[ind];\n            if (ind == this.activeOptionIndex) {\n                //  color = LightenDarkenColor(color, 150);\n            }\n            return color;\n        }\n    }, {\n        key: '__fectchPollsList__REACT_HOT_LOADER__',\n        value: function __fectchPollsList__REACT_HOT_LOADER__() {\n            return this.__fectchPollsList__REACT_HOT_LOADER__.apply(this, arguments);\n        }\n    }, {\n        key: '__fectchPollsList__REACT_HOT_LOADER__',\n        value: function __fectchPollsList__REACT_HOT_LOADER__() {\n            return this.__fectchPollsList__REACT_HOT_LOADER__.apply(this, arguments);\n        }\n    }, {\n        key: '__fectchPollsList__REACT_HOT_LOADER__',\n        value: function __fectchPollsList__REACT_HOT_LOADER__() {\n            return this.__fectchPollsList__REACT_HOT_LOADER__.apply(this, arguments);\n        }\n    }, {\n        key: '__fectchPollsList__REACT_HOT_LOADER__',\n        value: function __fectchPollsList__REACT_HOT_LOADER__() {\n            var _this2 = this;\n\n            _axios2.default.get(_appUrl2.default + \"/api/pollsList\").then(function (res) {\n                console.log(\"I've got the power of Polls\", res.data);\n                _this2.pollsList = res.data;\n                _this2.dataIsFetching.set(false);\n            });\n        }\n    }, {\n        key: 'setPollView',\n        value: function setPollView(id) {\n            //window.location.href\n            this.currentPoll = this.pollsList.find(function (e) {\n                if (e['_id'] == id) {\n                    return e;\n                } else {\n                    window.history.go(\"/\");\n                    return null;\n                }\n            });\n            if (this.currentPoll == null) return;\n            console.log(\"Setting Poll View\", this.currentPoll);\n            var colorMap = [];\n            var amount = 0;\n            this.currentPoll.options.forEach(function (opt, ind) {\n                opt.seqKey = ind;\n                colorMap.push(getRandomColor());\n                amount += opt.val;\n            });\n            this.colorMap = colorMap;\n\n            console.log(\"woooooa\", (0, _mobx.toJS)(this.colorMap));\n        }\n    }, {\n        key: 'setOptionIndex',\n        value: function setOptionIndex(ind) {\n            this.activeOptionIndex = ind;\n            console.log(ind);\n        }\n    }, {\n        key: 'optionsPercentageMap',\n        get: function get() {\n            var map = [];\n            var totalAmount = this.currentPoll.options.length;\n            this.currentPoll.options.forEach(function (opt) {\n                map.push[(opt.val / totalAmount * 100).toFixed(2) + \"%\"];\n            });\n            return map;\n        }\n    }]);\n\n    return ViewStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'currentPoll', [_mobx.observable], {\n    enumerable: true,\n    initializer: function initializer() {\n        return null;\n    }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'pollsList', [_mobx.observable], {\n    enumerable: true,\n    initializer: function initializer() {\n        return null;\n    }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, 'colorMap', [_mobx.observable], {\n    enumerable: true,\n    initializer: function initializer() {\n        return null;\n    }\n}), _applyDecoratedDescriptor(_class.prototype, 'optionsPercentageMap', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'optionsPercentageMap'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'setPollView', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'setPollView'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'setOptionIndex', [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, 'setOptionIndex'), _class.prototype)), _class));\n\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nvar _default = ViewStore;\nexports.default = _default;\n;\n\nvar _temp = function () {\n    if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n        return;\n    }\n\n    __REACT_HOT_LOADER__.register(ViewStore, 'ViewStore', '/home/ubuntu/workspace/react-webpack-boilerplate/app/stores/ViewStore.js');\n\n    __REACT_HOT_LOADER__.register(getRandomColor, 'getRandomColor', '/home/ubuntu/workspace/react-webpack-boilerplate/app/stores/ViewStore.js');\n\n    __REACT_HOT_LOADER__.register(_default, 'default', '/home/ubuntu/workspace/react-webpack-boilerplate/app/stores/ViewStore.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///398\n");

/***/ })

})
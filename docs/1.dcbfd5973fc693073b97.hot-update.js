webpackHotUpdate(1,{

/***/ 404:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _class;\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _recharts = __webpack_require__(405);\n\nvar _mobxReact = __webpack_require__(22);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//import {introspect} from 'patch-react-proptypes-add-introspection'\n//const DonutChart = require('react-donut-chart');\n\nvar COLORS = ['#0088FE', '#00C49F', '#FF8042'];\n\nvar PollChart = (_dec = (0, _mobxReact.inject)(\"ViewStore\", \"ApiStore\"), _dec(_class = (0, _mobxReact.observer)(_class = function (_React$Component) {\n  _inherits(PollChart, _React$Component);\n\n  function PollChart(props) {\n    _classCallCheck(this, PollChart);\n\n    var _this = _possibleConstructorReturn(this, (PollChart.__proto__ || Object.getPrototypeOf(PollChart)).call(this, props));\n\n    _this.resize = function () {\n      return _this.__resize__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.state = {\n      active: -1\n    };\n    return _this;\n  }\n\n  _createClass(PollChart, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n\n      //console.log(\"I will mount!\")\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps) {\n      // nextProps.ViewStore.setPollView();\n    }\n  }, {\n    key: '__resize__REACT_HOT_LOADER__',\n    value: function __resize__REACT_HOT_LOADER__() {\n      return this.__resize__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__resize__REACT_HOT_LOADER__',\n    value: function __resize__REACT_HOT_LOADER__() {\n      return this.__resize__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__resize__REACT_HOT_LOADER__',\n    value: function __resize__REACT_HOT_LOADER__() {\n      return this.__resize__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__resize__REACT_HOT_LOADER__',\n    value: function __resize__REACT_HOT_LOADER__() {\n      return this.forceUpdate();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.resize);\n      this.resize();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.resize);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!this.props.ApiStore.voted.get()) {\n        var store = this.props.ViewStore;\n        var poll = store.getProperty(\"currentPoll\");\n        var colorMap = store.getProperty(\"colorMap\");\n        var opts = [].concat(_toConsumableArray(poll.options));\n        console.log(opts);\n        opts.forEach(function (el, ind) {\n          el.id = ind;\n        });\n        //console.log(poll)\n        var colorPick = function colorPick(ind) {\n          // console.log(store.activeOptionIndex)\n          var color = colorMap[ind];\n          if (store.activeOptionIndex == ind) {\n            color = \"#000000\";\n          }\n          return color;\n        };\n        //let updater = this.props.ViewStore.updater.get();\n        var height = 0;\n        var width = 0;\n        var parent = document.getElementById('chart-container');\n        if (parent) {\n          height = parent.clientHeight;\n          width = parent.clientWidth;\n        }\n        //   <text style = {{'font-size': '40px'}} className = \"chosen-sector\" x={e.cx} y={e.cy - e.outerRadius - 10} dy={8} textAnchor=\"middle\" fill={\"white\"}>{e.payload.name}</text>\n        return _react2.default.createElement(\n          'div',\n          { className: 'flex-item' },\n          _react2.default.createElement(\n            _recharts.PieChart,\n            { width: width * 0.99, height: height * 0.99 },\n            _react2.default.createElement(\n              _recharts.Pie,\n              { data: opts, dataKey: 'votes', nameKey: 'name',\n                cx: '50%', cy: '50%', innerRadius: height * 0.28, outerRadius: height * 0.4, fill: '#82ca9d',\n                onMouseOver: function onMouseOver(e) {\n                  store.activeOptionIndex.set(e.payload.id);console.log(store.activeOptionIndex.get());\n                },\n                onClick: function onClick(e) {\n                  store.chosenOptionIndex.set(e.payload.id);\n                },\n                onMouseLeave: function onMouseLeave(e) {/*store.activeOptionIndex.set(-1);*/},\n                activeIndex: store.activeOptionIndex.get(),\n                activeShape: function activeShape(e) {\n                  return _react2.default.createElement(\n                    'g',\n                    null,\n                    _react2.default.createElement(\n                      'text',\n                      { className: 'chosen-sector', x: e.cx, y: e.cy, dy: 8, textAnchor: 'middle', fill: \"white\" },\n                      (e.percent * 100).toFixed(2) + \"%\"\n                    ),\n                    _react2.default.createElement(_recharts.Sector, {\n                      className: 'option-cell',\n                      cx: e.cx,\n                      cy: e.cy,\n                      startAngle: e.startAngle,\n                      endAngle: e.endAngle,\n                      innerRadius: height * 0.28,\n                      outerRadius: height * 0.4,\n                      stroke: 'black', 'stroke-width': 3,\n                      fill: e.payload.fill\n                    })\n                  );\n                } },\n              opts.map(function (entry, index) {\n                return _react2.default.createElement(_recharts.Cell, { className: 'option-cell', fill: colorPick(index), stroke: 'black' });\n              })\n            )\n          )\n        );\n      } else {\n        this.props.ApiStore.voted.set(false);return null;\n      }\n    }\n  }]);\n\n  return PollChart;\n}(_react2.default.Component)) || _class) || _class);\n\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction LightenDarkenColor(col, amt) {\n\n  var usePound = false;\n\n  if (col[0] == \"#\") {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(col, 16);\n\n  var r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;else if (r < 0) r = 0;\n\n  var b = (num >> 8 & 0x00FF) + amt;\n\n  if (b > 255) b = 255;else if (b < 0) b = 0;\n\n  var g = (num & 0x0000FF) + amt;\n\n  if (g > 255) g = 255;else if (g < 0) g = 0;\n\n  return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n}\n\nvar renderActiveShape = function renderActiveShape(props) {\n  var RADIAN = Math.PI / 180;\n  var cx = props.cx,\n      cy = props.cy,\n      midAngle = props.midAngle,\n      innerRadius = props.innerRadius,\n      outerRadius = props.outerRadius,\n      startAngle = props.startAngle,\n      endAngle = props.endAngle,\n      fill = props.fill,\n      payload = props.payload,\n      percent = props.percent,\n      value = props.value;\n\n  var sin = Math.sin(-RADIAN * midAngle);\n  var cos = Math.cos(-RADIAN * midAngle);\n  var sx = cx + (outerRadius + 10) * cos;\n  var sy = cy + (outerRadius + 10) * sin;\n  var mx = cx + (outerRadius + 30) * cos;\n  var my = cy + (outerRadius + 30) * sin;\n  var ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  var ey = my;\n  var textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return _react2.default.createElement(\n    'g',\n    null,\n    _react2.default.createElement(\n      'text',\n      { x: cx, y: cy, dy: 8, textAnchor: 'middle', fill: fill },\n      payload.name\n    ),\n    _react2.default.createElement(_recharts.Sector, {\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      fill: fill\n    }),\n    _react2.default.createElement(_recharts.Sector, {\n      cx: cx,\n      cy: cy,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: outerRadius + 6,\n      outerRadius: outerRadius + 10,\n      fill: fill\n    }),\n    _react2.default.createElement('path', { d: 'M' + sx + ',' + sy + 'L' + mx + ',' + my + 'L' + ex + ',' + ey, stroke: fill, fill: 'none' }),\n    _react2.default.createElement('circle', { cx: ex, cy: ey, r: 2, fill: fill, stroke: 'none' }),\n    _react2.default.createElement(\n      'text',\n      { x: ex + (cos >= 0 ? 1 : -1) * 12, y: ey, textAnchor: textAnchor, fill: '#333' },\n      'PV ' + value\n    ),\n    _react2.default.createElement(\n      'text',\n      { x: ex + (cos >= 0 ? 1 : -1) * 12, y: ey, dy: 18, textAnchor: textAnchor, fill: '#999' },\n      '(Rate ' + (percent * 100).toFixed(2) + '%)'\n    )\n  );\n};\n\nvar _default = PollChart;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(COLORS, 'COLORS', '/home/ubuntu/workspace/react-webpack-boilerplate/app/components/blocks/PollChart.js');\n\n  __REACT_HOT_LOADER__.register(PollChart, 'PollChart', '/home/ubuntu/workspace/react-webpack-boilerplate/app/components/blocks/PollChart.js');\n\n  __REACT_HOT_LOADER__.register(getRandomColor, 'getRandomColor', '/home/ubuntu/workspace/react-webpack-boilerplate/app/components/blocks/PollChart.js');\n\n  __REACT_HOT_LOADER__.register(LightenDarkenColor, 'LightenDarkenColor', '/home/ubuntu/workspace/react-webpack-boilerplate/app/components/blocks/PollChart.js');\n\n  __REACT_HOT_LOADER__.register(renderActiveShape, 'renderActiveShape', '/home/ubuntu/workspace/react-webpack-boilerplate/app/components/blocks/PollChart.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/home/ubuntu/workspace/react-webpack-boilerplate/app/components/blocks/PollChart.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///404\n");

/***/ })

})